{"metadata":{"title":"Persisting sync-ups","category":"Building SyncUps","role":"project","categoryPathComponent":"BuildingSyncUps"},"hierarchy":{"modules":[{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-"},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups"},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form"},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form"},{"projects":[{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk"},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail"},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"},{"projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","kind":"task"}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting"}],"paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk"]],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"},"sections":[{"estimatedTimeInMinutes":5,"chapter":"Persisting sync-ups to disk","content":[{"type":"paragraph","inlineContent":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"hero","title":"Persisting sync-ups"},{"kind":"tasks","tasks":[{"anchor":"Persisting-data-to-disk","stepsSection":[{"code":"PersistingSyncUps-01-code-0001.swift","runtimePreview":null,"caption":[{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"Our changes will not compile right now, but they will soon."}],"type":"paragraph"}]}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to the SyncUpsList.swift file, and start by applying the "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" property wrapper"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"code":"syncUps","type":"codeVoice"},{"type":"text","text":" field."}]}],"media":null,"type":"step"},{"inlineContent":[{"text":"This signifies that this value will be shared with other parts of the application. There are","type":"text"},{"text":" ","type":"text"},{"text":"many ways to share state, such as explicitly passing it in from a parent feature, or","type":"text"},{"text":" ","type":"text"},{"text":"persisting it to an external system. See the dedicated article ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},{"text":" for more","type":"text"},{"text":" ","type":"text"},{"text":"information on all of the various strategies.","type":"text"}],"type":"paragraph"},{"code":"PersistingSyncUps-01-code-0002.swift","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Further customize the ","type":"text"},{"type":"codeVoice","code":"@Shared"},{"text":" property wrapper with a persistence strategy. The library","type":"text"},{"text":" ","type":"text"},{"text":"comes with a few strategies you can use, but the most appropriate here is ","type":"text"},{"type":"codeVoice","code":"fileStorage"},{"text":" ","type":"text"},{"text":"since we are trying to save a complex data structure.","type":"text"}]}],"media":null,"type":"step"},{"inlineContent":[{"type":"text","text":"The "},{"code":"fileStorage","type":"codeVoice"},{"type":"text","text":" persistence strategy saves data to disk anytime the value in "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"changes, but it spaces the saves out a bit so as to not thrash the file system with every"},{"type":"text","text":" "},{"type":"text","text":"single change."}],"type":"paragraph"},{"code":"PersistingSyncUps-01-code-0003.swift","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"text":" persistence strategy","type":"text"},{"text":" ","type":"text"},{"text":"needs to be provided a URL for where to save the data. Add an extension to ","type":"text"},{"code":"URL","type":"codeVoice"},{"text":" at the","type":"text"},{"text":" ","type":"text"},{"text":"bottom of the file to define such a URL, and then provide it to the ","type":"text"},{"code":".fileStorage","type":"codeVoice"},{"text":" value.","type":"text"}]}],"media":null,"type":"step"},{"inlineContent":[{"text":"While the property is now compiling, there are several compiler errors where we were","type":"text"},{"text":" ","type":"text"},{"text":"previously mutating the ","type":"text"},{"code":"syncUps","type":"codeVoice"},{"text":" property, each with a diagnostic that tells us the changes","type":"text"},{"text":" ","type":"text"},{"text":"we must make, which is to mutate through the projected value’s ","type":"text"},{"code":"withLock","type":"codeVoice"},{"text":" method.","type":"text"}],"type":"paragraph"},{"code":"PersistingSyncUps-01-code-0004.swift","runtimePreview":null,"caption":[{"content":[{"inlineContent":[{"type":"text","text":"For more information on why "},{"type":"codeVoice","code":"withLock"},{"type":"text","text":" is required, see"},{"type":"text","text":" "},{"identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-sharing\/main\/documentation\/sharing\/mutatingsharedstate","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"}],"content":[{"type":"paragraph","inlineContent":[{"text":"Update each direct mutation to use ","type":"text"},{"code":"withLock","type":"codeVoice"},{"text":" on the projected value of the ","type":"text"},{"code":"syncUps","type":"codeVoice"},{"text":" ","type":"text"},{"text":"property, instead.","type":"text"}]}],"media":null,"type":"step"},{"inlineContent":[{"type":"text","text":"It is worth noting that "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":" only"},{"type":"text","text":" "},{"type":"text","text":"works with "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" data types, and earlier in the tutorial when we added models to"},{"type":"text","text":" "},{"type":"text","text":"Models.swift we made them codable from the beginning."}],"type":"paragraph"},{"code":"PersistingSyncUps-01-code-0005.swift","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"text":"Before moving on, we can still make this better.","type":"text"},{"text":" ","type":"text"},{"text":"It is possible to provide some type safety between the URL provided and the expected","type":"text"},{"text":" ","type":"text"},{"text":"type of data to be stored on disk, and make usage more concise. See","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys","isActive":true,"overridingTitle":"type-safe keys","overridingTitleInlineContent":[{"type":"text","text":"type-safe keys"}],"type":"reference"},{"text":" for more information.","type":"text"}],"type":"paragraph"}],"media":null,"type":"step"},{"code":"PersistingSyncUps-01-code-0006.swift","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We have one more error in the preview of the "},{"type":"codeVoice","code":"SyncUpsListView"},{"type":"text","text":". To prepare its list of"},{"type":"text","text":" "},{"type":"text","text":"sync-ups we can initialize a "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" property to the "},{"type":"codeVoice","code":".syncUps"},{"type":"text","text":" persistence strategy and"},{"type":"text","text":" "},{"type":"text","text":"provide a mock."}]}],"media":null,"type":"step"},{"inlineContent":[{"type":"text","text":"With that last change the project should be compiling. To confirm that persistence works"},{"type":"text","text":" "},{"type":"text","text":"we need to run the app in the simulator, but we haven’t done that yet in this tutorial."},{"type":"text","text":" "},{"type":"text","text":"To do that we need to update the entry point of the app to use the "},{"type":"codeVoice","code":"SyncUpsListView"},{"type":"text","text":"."}],"type":"paragraph"},{"code":"PersistingSyncUps-01-code-0007.swift","runtimePreview":null,"caption":[{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We construct the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"type":"text","text":" as a static so that it is"},{"type":"text","text":" "},{"type":"text","text":"initialized only one time, and so that it is not created while running Xcode previews."}]}],"style":"note"}],"content":[{"type":"paragraph","inlineContent":[{"text":"Go to SyncUpsApp.swift and update the root view to be a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":" wrapping a","type":"text"},{"text":" ","type":"text"},{"code":"SyncUpsListView","type":"codeVoice"},{"text":".","type":"text"}]}],"media":null,"type":"step"},{"code":null,"runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the app in the simulator, add a sync-up, and then relaunch the application to see that"},{"type":"text","text":" "},{"type":"text","text":"it restores the previously created sync-up. This shows that data is persisting."}]}],"media":"PersistingSyncUps-01-video-0008.mov","type":"step"}],"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To persist state to an external system you must make use of the "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" property wrapper"},{"type":"text","text":" "},{"type":"text","text":"with a persistence strategy."}]}]}],"title":"Persisting data to disk"},{"anchor":"Testing-persistence","stepsSection":[{"inlineContent":[{"text":"Before anything, we need to fix a few compiler errors. We’ll start with the initialization","type":"text"},{"text":" ","type":"text"},{"text":"of the sync-ups in the ","type":"text"},{"code":"deletion()","type":"codeVoice"},{"text":" test.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To provide a specific shared value to a test, we can do the same as we did in the preview,"},{"type":"text","text":" "},{"type":"text","text":"where we pointed the "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" property wrapper to the "},{"code":".syncUps","type":"codeVoice"},{"type":"text","text":" persistence strategy and"},{"type":"text","text":" "},{"type":"text","text":"provided a default."}],"type":"paragraph"},{"runtimePreview":null,"code":"PersistingSyncUps-02-code-0001.swift","media":null,"type":"step","caption":[{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":" persistence strategy uses an internal dependency for changing how"},{"type":"text","text":" "},{"type":"text","text":"files are written to the disk and loaded from disk. In tests the dependency will forgo any"},{"type":"text","text":" "},{"type":"text","text":"interaction with the file system and instead write data to a "},{"type":"codeVoice","code":"[URL: Data]"},{"type":"text","text":" dictionary, and"},{"type":"text","text":" "},{"type":"text","text":"load data from that dictionary. That emulates how the file system works, but without"},{"type":"text","text":" "},{"type":"text","text":"persisting any data to the global file system."}]}],"type":"aside"}],"content":[{"inlineContent":[{"text":"Go to ","type":"text"},{"code":"SyncUpsListTests.swift","type":"codeVoice"},{"text":" and provide a default sync-ups value to the ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"text":" ","type":"text"},{"text":"property wrapper that includes the sync-up we will delete.","type":"text"}],"type":"paragraph"}]},{"runtimePreview":null,"code":"PersistingSyncUps-02-code-0002.swift","media":null,"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Next, we need to update the way we mutate the sync-ups by using the "},{"code":"withLock","type":"codeVoice"},{"type":"text","text":" method on its"},{"type":"text","text":" "},{"type":"text","text":"projected value."}],"type":"paragraph"}]},{"inlineContent":[{"text":"With that, we should be in compiling order.","type":"text"}],"type":"paragraph"},{"runtimePreview":null,"code":null,"media":null,"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Run the test suite to see that everything still passes."}],"type":"paragraph"}]},{"runtimePreview":null,"code":"PersistingSyncUps-02-code-0003.swift","media":null,"type":"step","caption":[],"content":[{"inlineContent":[{"text":"Make a change to the ","type":"text"},{"code":"addSyncUp","type":"codeVoice"},{"text":" test to make an incorrect assertion.","type":"text"}],"type":"paragraph"}]},{"runtimePreview":null,"code":null,"media":null,"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Run the test suite again to see that you get a test failure with a message that tells you","type":"text"},{"text":" ","type":"text"},{"text":"exactly what went wrong.","type":"text"}]}]},{"inlineContent":[{"type":"text","text":"This shows that the exhaustive testing tools of the Composable Architecture continue to work"},{"type":"text","text":" "},{"type":"text","text":"exactly the same, even when dealing with globally shared state that is persisted to disk. Be"},{"type":"text","text":" "},{"type":"text","text":"sure to read the full article "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},{"type":"text","text":" for more information about shared state and"},{"type":"text","text":" "},{"type":"text","text":"persistence."}],"type":"paragraph"}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"Testing state that is held in "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" with "},{"type":"codeVoice","code":".fileStorage"},{"type":"text","text":" persistence works"},{"type":"text","text":" "},{"type":"text","text":"exactly like regular state without "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":". The"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},{"type":"text","text":" forces you to exhaustively prove how all state changes."}],"type":"paragraph"}]}],"title":"Testing persistence"}]},{"abstract":[{"text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that","type":"text"},{"text":" ","type":"text"},{"text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync","type":"text"},{"text":" ","type":"text"},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}],"action":{"isActive":true,"overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","type":"reference"},"kind":"callToAction","featuredEyebrow":"Tutorial","title":"Sync-up detail"}],"kind":"project","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/composablearchitecture\/persistingsyncups"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps"},"references":{"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"text":" ","type":"text"},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"role":"pseudoSymbol","title":"More concise domain modeling","type":"section","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","title":"Create the sync-up detail","kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that","type":"text"},{"text":" ","type":"text"},{"text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync","type":"text"},{"text":" ","type":"text"},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","kind":"section","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees","role":"pseudoSymbol","title":"Adding attendees"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"kind":"article","type":"topic","title":"Persisting sync-ups to disk","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","role":"article","url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk"},"PersistingSyncUps-01-code-0005.swift":{"syntax":"swift","highlights":[{"line":9},{"line":54},{"line":55},{"line":56},{"line":57}],"fileName":"SyncUpsList.swift","identifier":"PersistingSyncUps-01-code-0005.swift","fileType":"swift","type":"file","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.syncUps) var syncUps","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.$syncUps.withLock { _ = $0.append(syncUp) }","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.$syncUps.withLock { $0.remove(atOffsets: indexSet) }","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}","","extension SharedKey where Self == FileStorageKey<IdentifiedArrayOf<SyncUp>>.Default {","  static var syncUps: Self {","    Self[.fileStorage(.documentsDirectory.appending(component: \"sync-ups.json\")), default: []]","  }","}"]},"https://swiftpackageindex.com/pointfreeco/swift-sharing/main/documentation/sharing/mutatingsharedstate":{"titleInlineContent":[{"text":"Mutating shared state","type":"text"}],"title":"Mutating shared state","type":"link","identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-sharing\/main\/documentation\/sharing\/mutatingsharedstate","url":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-sharing\/main\/documentation\/sharing\/mutatingsharedstate"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"kind":"project","type":"topic","role":"project","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups","title":"Testing the list of sync-ups","estimatedTime":"5min","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"type":"text","text":" "},{"type":"text","text":"behavior to test."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"url":"\/tutorials\/buildingsyncups\/what-is-syncups-","role":"article","abstract":[],"title":"What is SyncUps?","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","kind":"article","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"type":"section","title":"Persisting data to disk","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"role":"article","kind":"article","title":"Sync-up detail","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","url":"\/tutorials\/buildingsyncups\/sync-up-detail","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"title":"TestStore"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature","title":"Create a new feature","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"text":" ","type":"text"},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","type":"section","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","role":"project","estimatedTime":"25min","type":"topic","url":"\/tutorials\/composablearchitecture\/implementingtimer","kind":"project","title":"Adding a meeting timer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","type":"section","title":"Creating the app feature"},"PersistingSyncUps-02-code-0003.swift":{"fileName":"SyncUpsListTests.swift","type":"file","content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpsListTests {","  @Test","  func addSyncUp() async {","    let store = TestStore(initialState: SyncUpsList.State()) {","      SyncUpsList()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addSyncUpButtonTapped) {","      $0.addSyncUp = SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID(0))","      )","    }","","    let editedSyncUp = SyncUp(","      id: SyncUp.ID(0),","      attendees: [","        Attendee(id: Attendee.ID(), name: \"Blob\"),","        Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      ],","      title: \"Point-Free morning sync\"","    )","    await store.send(.addSyncUp(.presented(.set(\\.syncUp, editedSyncUp)))) {","      $0.addSyncUp?.syncUp = editedSyncUp","    }","","    await store.send(.confirmAddButtonTapped) {","      $0.addSyncUp = nil","      \/\/ $0.$syncUps.withLock { $0 = [editedSyncUp] }","    }","  }","","  @Test","  func deletion() async {","    @Shared(.syncUps) var syncUps = [","      SyncUp(","        id: SyncUp.ID(),","        title: \"Point-Free Morning Sync\"","      )","    ]","    let store = TestStore(","      initialState: SyncUpsList.State()","    ) {","      SyncUpsList()","    }","","    await store.send(.onDelete([0])) {","      $0.$syncUps.withLock { $0 = [] }","    }","  }","}"],"syntax":"swift","identifier":"PersistingSyncUps-02-code-0003.swift","fileType":"swift","highlights":[{"line":36}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps","kind":"project","estimatedTime":"10min","title":"Lists of sync-ups","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"text":" ","type":"text"},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"text":" ","type":"text"},{"text":"the app evolves.","type":"text"}],"role":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/listsofsyncups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"kind":"section","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models","title":"Domain models","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","type":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"kind":"section","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission","role":"pseudoSymbol","type":"section","title":"Asking for speech recognition permission","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"code":"SFSpeechRecognizer","type":"codeVoice"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"type":"text","text":"in progress."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"kind":"section","type":"section","title":"Writing your first test","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"type":"text","text":" "},{"type":"text","text":"behavior to test."}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"title":"Persisting sync-ups","kind":"project","type":"topic","estimatedTime":"5min","url":"\/tutorials\/composablearchitecture\/persistingsyncups","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@Shared"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"fileStorage"},{"text":".","type":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" and "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing","title":"Non-exhaustive testing","role":"pseudoSymbol","type":"section","kind":"section"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"kind":"article","role":"article","url":"\/tutorials\/buildingsyncups\/new-sync-up-form","abstract":[],"title":"New sync-up form","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"text":" ","type":"text"},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"text":" ","type":"text"},{"text":"previous recorded meeting.","type":"text"}],"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen","type":"section","role":"pseudoSymbol","title":"The meeting screen"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"estimatedTime":"10min","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","title":"Presenting the sync-up form","url":"\/tutorials\/composablearchitecture\/presentingsyncupform","type":"topic","role":"project","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"role":"overview","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"type":"text","text":" "},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"type":"text","text":" "},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"type":"topic","kind":"overview","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","url":"\/tutorials\/buildingsyncups","title":"Building SyncUps"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"type":"section","title":"SyncUpsList feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature"},"PersistingSyncUps-01-code-0001.swift":{"syntax":"swift","identifier":"PersistingSyncUps-01-code-0001.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}"],"type":"file","fileName":"SyncUpsList.swift","highlights":[{"line":9}],"fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","kind":"project","estimatedTime":"10min","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"type":"text","text":" "},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"type":"text","text":"updates the parent feature via a shared property. It’s about time we got some test"},{"type":"text","text":" "},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"type":"text","text":" "},{"type":"text","text":"changes with confidence."}],"type":"topic","role":"project","title":"Testing the sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","type":"topic","role":"project","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation","abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"text":" so that we can navigate to","type":"text"},{"text":" ","type":"text"},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"text":" ","type":"text"},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"kind":"project","title":"Navigating to a sync-up detail","estimatedTime":"20min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"text":" ","type":"text"},{"text":"recreation of Apple’s Scrumdinger demo application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project","title":"Create the SyncUps project","kind":"section","type":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail","kind":"article","role":"article","type":"topic","title":"Navigating to sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","role":"pseudoSymbol","type":"section","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together","title":"Integrating the feature domains together","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"text":" ","type":"text"},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"text":"add that sync-up to the root list.","type":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"text":" ","type":"text"},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"text":" ","type":"text"},{"text":"previous recorded meeting.","type":"text"}],"kind":"project","title":"Navigating to a meeting","role":"project","estimatedTime":"5min","url":"\/tutorials\/composablearchitecture\/meetingnavigation","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"title":"Adding a speech recognizer","abstract":[{"text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need","type":"text"},{"text":" ","type":"text"},{"text":"to use Apple’s ","type":"text"},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"text":" API to ask the user for permission to transcribe their","type":"text"},{"text":" ","type":"text"},{"text":"audio, and then start a speech recognition task to live transcribe the meeting while it is","type":"text"},{"text":" ","type":"text"},{"text":"in progress.","type":"text"}],"kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","role":"project","estimatedTime":"10min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"abstract":[{"text":"Now that we have a navigation stack in place we can start navigating to other features in the","type":"text"},{"text":" ","type":"text"},{"text":"application. The simplest is the meeting screen, which allows you to see the details of a","type":"text"},{"text":" ","type":"text"},{"text":"previous recorded meeting.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","type":"section","kind":"section","title":"Navigate to a meeting","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"title":"Sharing state","url":"\/documentation\/composablearchitecture\/sharingstate","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","type":"topic","role":"article","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"title":"Store","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","url":"\/documentation\/composablearchitecture\/store"},"PersistingSyncUps-01-code-0004.swift":{"type":"file","identifier":"PersistingSyncUps-01-code-0004.swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.$syncUps.withLock { _ = $0.append(syncUp) }","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.$syncUps.withLock { $0.remove(atOffsets: indexSet) }","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}","","extension URL {","  static let syncUps = Self.documentsDirectory.appending(component: \"sync-ups.json\")","}"],"fileType":"swift","highlights":[{"line":33},{"line":41}],"fileName":"SyncUpsList.swift"},"PersistingSyncUps-01-code-0006.swift":{"fileName":"SyncUpsList.swift","syntax":"swift","fileType":"swift","highlights":[{"line":14},{"line":18}],"identifier":"PersistingSyncUps-01-code-0006.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  \/\/ ...","}","","#Preview {","  @Shared(.syncUps) var syncUps = [.mock]","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State()","      ) {","        SyncUpsList()","          ._printChanges()","      }","    )","  }","}"],"type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"abstract":[{"text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a","type":"text"},{"text":" ","type":"text"},{"text":"recreation of Apple’s Scrumdinger demo application.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/whatissyncups","kind":"project","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","title":"What is SyncUps?","role":"project","estimatedTime":"5min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"abstract":[{"type":"text","text":"The "},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"type":"text","text":" "},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"type":"text","text":"updates the parent feature via a shared property. It’s about time we got some test"},{"type":"text","text":" "},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"type":"text","text":" "},{"type":"text","text":"changes with confidence."}],"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","kind":"section","title":"Testing the edit flow","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"title":"A basic timer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"text":" ","type":"text"},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"kind":"section","title":"Navigating to the record meeting feature","role":"pseudoSymbol","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","kind":"section","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"type":"section","title":"A tour of SyncUps","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early","kind":"section","title":"Controlling dependencies early","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","type":"section","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"role":"project","estimatedTime":"5min","title":"The RecordMeeting feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"kind":"project","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","estimatedTime":"10min","abstract":[{"text":"We have now integrated two moderately complex features, the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":", and","type":"text"},{"text":" ","type":"text"},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"text":" ","type":"text"},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"text":" ","type":"text"},{"text":"fragile.","type":"text"}],"title":"Testing the add sync-up flow","type":"topic","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"url":"\/tutorials\/composablearchitecture\/testingnavigation","role":"project","estimatedTime":"10min","kind":"project","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"type":"text","text":" "},{"type":"text","text":"3 features into the stack: the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature, the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature, and the"},{"type":"text","text":" "},{"type":"codeVoice","code":"MeetingView"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation","title":"Testing navigation"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","role":"pseudoSymbol","type":"section","title":"Adding a new sync-up to the list","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list","kind":"section"},"PersistingSyncUps-01-code-0003.swift":{"type":"file","highlights":[{"line":9},{"line":53},{"line":54},{"line":55},{"line":56}],"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.fileStorage(.syncUps)) var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}","","extension URL {","  static let syncUps = Self.documentsDirectory.appending(component: \"sync-ups.json\")","}"],"fileName":"SyncUpsList.swift","syntax":"swift","identifier":"PersistingSyncUps-01-code-0003.swift","fileType":"swift"},"PersistingSyncUps-02-code-0002.swift":{"content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpsListTests {","  @Test","  func addSyncUp() async {","    let store = TestStore(initialState: SyncUpsList.State()) {","      SyncUpsList()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addSyncUpButtonTapped) {","      $0.addSyncUp = SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID(0))","      )","    }","","    let editedSyncUp = SyncUp(","      id: SyncUp.ID(0),","      attendees: [","        Attendee(id: Attendee.ID(), name: \"Blob\"),","        Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      ],","      title: \"Point-Free morning sync\"","    )","    await store.send(.addSyncUp(.presented(.set(\\.syncUp, editedSyncUp)))) {","      $0.addSyncUp?.syncUp = editedSyncUp","    }","","    await store.send(.confirmAddButtonTapped) {","      $0.addSyncUp = nil","      $0.$syncUps.withLock { $0 = [editedSyncUp] }","    }","  }","","  @Test","  func deletion() async {","    @Shared(.syncUps) var syncUps = [","      SyncUp(","        id: SyncUp.ID(),","        title: \"Point-Free Morning Sync\"","      )","    ]","    let store = TestStore(","      initialState: SyncUpsList.State()","    ) {","      SyncUpsList()","    }","","    await store.send(.onDelete([0])) {","      $0.$syncUps.withLock { $0 = [] }","    }","  }","}"],"identifier":"PersistingSyncUps-02-code-0002.swift","fileType":"swift","type":"file","syntax":"swift","highlights":[{"line":36},{"line":55}],"fileName":"SyncUpsListTests.swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","title":"Testing the timer","url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer","type":"section","role":"pseudoSymbol","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"title":"Creating the app view","role":"pseudoSymbol","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"kind":"project","estimatedTime":"15min","type":"topic","title":"Sync-up form","url":"\/tutorials\/composablearchitecture\/syncupform","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence","abstract":[{"text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some","type":"text"},{"text":" ","type":"text"},{"text":"persistence. This will involve using the “shared state” tools from the library, such as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@Shared"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"fileStorage"},{"text":".","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","role":"pseudoSymbol","kind":"section","type":"section","title":"Testing persistence"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"type":"topic","url":"\/tutorials\/composablearchitecture\/testingsyncupform","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"code":"SyncUpForm","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","title":"Testing the sync-up form","estimatedTime":"10min","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics","kind":"section","title":"Sync-up form basics","abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"text":" ","type":"text"},{"text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the","type":"text"},{"text":" ","type":"text"},{"text":"feature to make things a little more interesting.","type":"text"}],"role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"section","abstract":[{"text":"The first major piece of logic and behavior we will introduce to the record meeting feature is","type":"text"},{"text":" ","type":"text"},{"text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and","type":"text"},{"text":" ","type":"text"},{"text":"we need to implement nuanced logic to figure out when to proceed to the next speaker.","type":"text"}],"type":"section","title":"Ending the meeting early","role":"pseudoSymbol"},"PersistingSyncUps-01-code-0002.swift":{"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  @ObservableState","  struct State: Equatable {","    @Presents var addSyncUp: SyncUpForm.State?","    @Shared(.fileStorage()) var syncUps: IdentifiedArrayOf<SyncUp> = []","  }","  enum Action {","    case addSyncUpButtonTapped","    case addSyncUp(PresentationAction<SyncUpForm.Action>)","    case confirmAddButtonTapped","    case discardButtonTapped","    case onDelete(IndexSet)","    case syncUpTapped(id: SyncUp.ID)","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .addSyncUpButtonTapped:","        state.addSyncUp = SyncUpForm.State(syncUp: SyncUp(id: SyncUp.ID()))","        return .none","","      case .addSyncUp:","        return .none","","      case .confirmAddButtonTapped:","        guard let newSyncUp = state.addSyncUp?.syncUp","        else { return .none }","        state.addSyncUp = nil","        state.syncUps.append(newSyncUp)","        return .none","","      case .discardButtonTapped:","        state.addSyncUp = nil","        return .none","","      case let .onDelete(indexSet):","        state.syncUps.remove(atOffsets: indexSet)","        return .none","","      case .syncUpTapped:","        return .none","      }","    }","    .ifLet(\\.$addSyncUp, action: \\.addSyncUp) {","      SyncUpForm()","    }","  }","}"],"identifier":"PersistingSyncUps-01-code-0002.swift","syntax":"swift","type":"file","fileName":"SyncUpsList.swift","fileType":"swift","highlights":[{"line":9}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","type":"section","url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up","role":"pseudoSymbol","abstract":[{"type":"text","text":"We have now implemented a navigation stack at the root of our application, and integrated"},{"type":"text","text":" "},{"type":"text","text":"3 features into the stack: the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" feature, the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature, and the"},{"type":"text","text":" "},{"type":"codeVoice","code":"MeetingView"},{"type":"text","text":". Some of these features have quite complex logic binding them together, such as"},{"type":"text","text":" "},{"type":"text","text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack."}],"title":"Deleting a sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","estimatedTime":"5min","url":"\/tutorials\/composablearchitecture\/syncupdetail","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"type":"topic","title":"Sync-up detail","kind":"project","role":"project"},"PersistingSyncUps-01-video-0008.mov":{"variants":[{"traits":["1x","light"],"url":"\/videos\/ComposableArchitecture\/PersistingSyncUps-01-video-0008.mov"}],"type":"video","alt":null,"identifier":"PersistingSyncUps-01-video-0008.mov","poster":null},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"title":"Record meeting","abstract":[],"role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","type":"topic","kind":"article","url":"\/tutorials\/buildingsyncups\/record-meeting"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"role":"pseudoSymbol","abstract":[{"text":"We have now integrated two moderately complex features, the ","type":"text"},{"type":"codeVoice","code":"SyncUpsList"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"text":", and","type":"text"},{"text":" ","type":"text"},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"text":" ","type":"text"},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"text":" ","type":"text"},{"text":"fragile.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up","kind":"section","type":"section","title":"Adding a sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees","kind":"section","title":"Removing attendees","type":"section","role":"pseudoSymbol","abstract":[{"text":"We now have a moderately complex feature for editing the details of a sync-up, the ","type":"text"},{"type":"codeVoice","code":"SyncUpForm"},{"text":" ","type":"text"},{"text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come","type":"text"},{"text":" ","type":"text"},{"text":"face-to-face with dependencies for the first time in this tutorial.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"abstract":[{"text":"We will create a new feature with the Composable Architecture that is capable of editing the","type":"text"},{"text":" ","type":"text"},{"text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the","type":"text"},{"text":" ","type":"text"},{"text":"feature to make things a little more interesting.","type":"text"}],"type":"section","title":"Form focus: an approach","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form","title":"Presenting the sync-up form","role":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","kind":"article","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool","title":"A handy debugging tool","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"text":" ","type":"text"},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"text":" ","type":"text"},{"text":"the app evolves.","type":"text"}],"kind":"section","type":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","role":"pseudoSymbol","title":"Form focus: a better approach","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"text":" ","type":"text"},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"title":"Deleting the sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","type":"section","role":"pseudoSymbol","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup","kind":"project","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"text":" ","type":"text"},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"title":"Editing and deleting a sync-up","role":"project","estimatedTime":"30min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"abstract":[{"text":"We will wrap the application built so far in a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"text":" so that we can navigate to","type":"text"},{"text":" ","type":"text"},{"text":"the detail screen. To do this we will create a new root-level feature that will be responsible","type":"text"},{"text":" ","type":"text"},{"text":"for implementing the logic of the stack and integrating all of the features together.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail","type":"section","kind":"section","role":"pseudoSymbol","title":"Navigating to the detail"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"role":"article","title":"Lists of sync-ups","kind":"article","abstract":[],"url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups"},"PersistingSyncUps-02-code-0001.swift":{"content":["import ComposableArchitecture","import Testing","","@testable import SyncUps","","@MainActor","struct SyncUpsListTests {","  @Test","  func addSyncUp() async {","    let store = TestStore(initialState: SyncUpsList.State()) {","      SyncUpsList()","    } withDependencies: {","      $0.uuid = .incrementing","    }","","    await store.send(.addSyncUpButtonTapped) {","      $0.addSyncUp = SyncUpForm.State(","        syncUp: SyncUp(id: SyncUp.ID(0))","      )","    }","","    let editedSyncUp = SyncUp(","      id: SyncUp.ID(0),","      attendees: [","        Attendee(id: Attendee.ID(), name: \"Blob\"),","        Attendee(id: Attendee.ID(), name: \"Blob Jr.\"),","      ],","      title: \"Point-Free morning sync\"","    )","    await store.send(.addSyncUp(.presented(.set(\\.syncUp, editedSyncUp)))) {","      $0.addSyncUp?.syncUp = editedSyncUp","    }","","    await store.send(.confirmAddButtonTapped) {","      $0.addSyncUp = nil","      $0.syncUps = [editedSyncUp]","    }","  }","","  @Test","  func deletion() async {","    @Shared(.syncUps) var syncUps = [","      SyncUp(","        id: SyncUp.ID(),","        title: \"Point-Free Morning Sync\"","      )","    ]","    let store = TestStore(","      initialState: SyncUpsList.State()","    ) {","      SyncUpsList()","    }","","    await store.send(.onDelete([0])) {","      $0.syncUps = []","    }","  }","}"],"type":"file","fileName":"SyncUpsListTests.swift","syntax":"swift","highlights":[{"line":42},{"line":43},{"line":44},{"line":45},{"line":47},{"line":48},{"line":49}],"fileType":"swift","identifier":"PersistingSyncUps-02-code-0001.swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together","title":"Integrating the feature views together","type":"section","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"text":" ","type":"text"},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"text":"add that sync-up to the root list.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","kind":"section"},"PersistingSyncUps-01-code-0007.swift":{"identifier":"PersistingSyncUps-01-code-0007.swift","fileType":"swift","syntax":"swift","highlights":[],"type":"file","content":["import ComposableArchitecture","import SwiftUI","","@main","struct SyncUpsApp: App {","  @MainActor","  static let store = Store(initialState: SyncUpsList.State()) {","    SyncUpsList()","  }","","  var body: some Scene {","    WindowGroup {","      NavigationStack {","        SyncUpsListView(store: Self.store)","      }","    }","  }","}"],"fileName":"SyncUpsApp.swift"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Type-safe-keys":{"abstract":[],"type":"topic","title":"Type-safe keys","url":"\/documentation\/composablearchitecture\/sharingstate#Type-safe-keys","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"role":"pseudoSymbol","type":"section","title":"Editing the sync-up","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up"}}}