{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.navigationDocument(_:preview:)","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"navigationDocument","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"I1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"I2","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"document","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"preview","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SharePreview","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI12SharePreviewV"},{"text":"<","kind":"text"},{"text":"I1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"I2","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Transferable","kind":"typeIdentifier","preciseIdentifier":"s:16CoreTransferable0B0P"},{"text":", ","kind":"text"},{"text":"I1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Transferable","kind":"typeIdentifier","preciseIdentifier":"s:16CoreTransferable0B0P"},{"text":", ","kind":"text"},{"text":"I2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Transferable","kind":"typeIdentifier","preciseIdentifier":"s:16CoreTransferable0B0P"},{"text":"\n","kind":"text"}]}],"kind":"declarations"}],"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/navigationdocument(_:preview:)-4olg9"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"roleHeading":"Instance Method","extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewPAAE18navigationDocument_7previewQrqd___AA12SharePreviewVyqd_0_qd_1_Gt16CoreTransferable0J0Rd__AiJRd_0_AiJRd_1_r1_lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"navigationDocument"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"I1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"I2"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"externalParam","text":"preview"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI12SharePreviewV","text":"SharePreview"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"I1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"I2"},{"kind":"text","text":">) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"title":"navigationDocument(_:preview:)","role":"symbol","symbolKind":"method","platforms":[{"name":"iOS","introducedAt":"16.0","unavailable":false,"deprecated":false,"beta":false},{"name":"macOS","introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false},{"name":"watchOS","introducedAt":"9.0","unavailable":false,"deprecated":false,"beta":false}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/navigationDocument(_:preview:)-4olg9","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic","title":"SwiftUI Integration","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/navigationDocument(_:preview:)-4olg9":{"title":"navigationDocument(_:preview:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/navigationDocument(_:preview:)-4olg9","abstract":[],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"navigationDocument","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"I1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"I2","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"preview","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI12SharePreviewV","text":"SharePreview","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"I1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"I2","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/navigationdocument(_:preview:)-4olg9","role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore","kind":"symbol","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}]}}}