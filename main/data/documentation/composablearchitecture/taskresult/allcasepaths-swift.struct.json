{"sections":[],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/failure","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/success"],"anchor":"Instance-Properties","generated":true}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"CasePathable.AllCasePaths","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AllCasePaths"}],"platforms":["macOS"]}],"kind":"declarations"}],"metadata":{"symbolKind":"struct","navigatorTitle":[{"text":"AllCasePaths","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture10TaskResultO12AllCasePathsV","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Success"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"extendedModule":"ComposableArchitecture","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllCasePaths","kind":"identifier"}],"title":"TaskResult.AllCasePaths","roleHeading":"Structure"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"text":"s should be executed later by the store, if any.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct":{"title":"TaskResult.AllCasePaths","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllCasePaths","kind":"identifier"}],"abstract":[],"url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Success"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"type":"topic","role":"symbol","navigatorTitle":[{"text":"AllCasePaths","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct/failure":{"role":"symbol","url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct\/failure","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"failure","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyCasePath","preciseIdentifier":"s:9CasePaths03AnyA4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">, any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"failure","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/failure","abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct/success":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"success"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyCasePath","preciseIdentifier":"s:9CasePaths03AnyA4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Success"},{"text":">","kind":"text"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/success","title":"success","type":"topic","url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct\/success"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/CasePathable-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/taskresult\/casepathable-implementations","type":"topic","title":"CasePathable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations","abstract":[],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"role":"symbol","kind":"symbol","title":"Effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/taskresult","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskResult","kind":"identifier"}],"abstract":[{"type":"text","text":"A value that represents either a success or a failure. This type differs from Swiftâ€™s "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" "},{"type":"text","text":"type in that it uses only one generic for the success case, leaving the failure case as an"},{"type":"text","text":" "},{"type":"text","text":"untyped "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"title":"TaskResult","kind":"symbol","navigatorTitle":[{"text":"TaskResult","kind":"identifier"}],"deprecated":true}}}