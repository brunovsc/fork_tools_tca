{"metadata":{"modules":[{"name":"ComposableArchitecture"}],"title":"ForEachStore","externalID":"s:22ComposableArchitecture12ForEachStoreV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEachStore","kind":"identifier"}],"navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"roleHeading":"Structure","platforms":[],"symbolKind":"struct","role":"symbol"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","interfaceLanguage":"swift"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Pass 'ForEach' a store scoped to an identified array and identified action, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-ForEachStore-with-ForEach]","type":"text"}]}],"topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-1cwd0","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-4l45p"],"generated":true},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/body","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/data"],"generated":true},{"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/DynamicViewContent-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s8SendableP","doc:\/\/ComposableArchitecture\/7SwiftUI18DynamicViewContentP","doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"]}],"abstract":[{"text":"A Composable Architecture-friendly wrapper around ","type":"text"},{"type":"codeVoice","code":"ForEach"},{"text":" that simplifies working with","type":"text"},{"text":" ","type":"text"},{"text":"collections of state.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEachStore","kind":"identifier"},{"text":"<","kind":"text"},{"text":"EachState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"EachAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Data","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ID","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Content","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore"},{"text":" loops over a store’s collection with a store scoped to the domain of each","type":"text"},{"text":" ","type":"text"},{"text":"element. This allows you to extract and modularize an element’s view and avoid concerns around","type":"text"},{"text":" ","type":"text"},{"text":"collection index math and parent-child store communication.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, a todos app may define the domain and logic associated with an individual todo:"}],"type":"paragraph"},{"code":["@Reducer","struct Todo {","  struct State: Equatable, Identifiable {","    let id: UUID","    var description = \"\"","    var isComplete = false","  }","","  enum Action {","    case isCompleteToggled(Bool)","    case descriptionChanged(String)","  }","","  var body: some Reducer<State, Action> {","    \/\/ ...","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"As well as a view with a domain-specific store:"}],"type":"paragraph"},{"code":["struct TodoView: View {","  let store: StoreOf<Todo>","  var body: some View { \/* ... *\/ }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"For a parent domain to work with a collection of todos, it can hold onto this collection in","type":"text"},{"text":" ","type":"text"},{"text":"state:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","struct Todos {","  struct State: Equatable {","    var todos: IdentifiedArrayOf<Todo.State> = []","  }","  \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Define a case to handle actions sent to the child domain:","type":"text"}],"type":"paragraph"},{"code":["enum Action {","  case todos(IdentifiedActionOf<Todo>)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Enhance its core reducer using","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-6zye8","isActive":true,"type":"reference"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["var body: some Reducer<State, Action> {","  Reduce { state, action in","    \/\/ ...","  }","  .forEach(\\.todos, action: \\.todos) {","    Todo()","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"And finally render a list of "},{"type":"codeVoice","code":"TodoView"},{"type":"text","text":"s using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["ForEachStore(","  self.store.scope(state: \\.todos, action: \\.todos)",") { todoStore in","  TodoView(store: todoStore)","}"],"syntax":"swift","type":"codeListing"}]}],"seeAlsoSections":[{"title":"View containers","anchor":"View-containers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore"],"generated":true}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/foreachstore"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/foreachstore","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ForEachStore"}],"role":"symbol","deprecated":true,"title":"ForEachStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","abstract":[{"text":"A Composable Architecture-friendly wrapper around ","type":"text"},{"code":"ForEach","type":"codeVoice"},{"text":" that simplifies working with","type":"text"},{"text":" ","type":"text"},{"text":"collections of state.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/DynamicViewContent-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/DynamicViewContent-Implementations","title":"DynamicViewContent Implementations","kind":"article","type":"topic","abstract":[],"url":"\/documentation\/composablearchitecture\/foreachstore\/dynamicviewcontent-implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/init(_:content:)-1cwd0":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"EachContent"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","text":"IdentifiedArray"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"EachState"},{"kind":"text","text":">, (id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EachAction"},{"kind":"text","text":")>, "},{"kind":"externalParam","text":"content"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"EachState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"EachAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EachContent"},{"kind":"text","text":")"}],"abstract":[],"deprecated":true,"kind":"symbol","title":"init(_:content:)","role":"symbol","url":"\/documentation\/composablearchitecture\/foreachstore\/init(_:content:)-1cwd0","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-1cwd0"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/body":{"title":"body","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"deprecated":true,"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/body","abstract":[],"url":"\/documentation\/composablearchitecture\/foreachstore\/body"},"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WithViewStore","kind":"identifier"}],"title":"WithViewStore","role":"symbol","type":"topic","navigatorTitle":[{"text":"WithViewStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","abstract":[{"type":"text","text":"A view helper that transforms a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" into a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" so that its state can be observed"},{"type":"text","text":" "},{"type":"text","text":"by a view builder."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/withviewstore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"deprecated":true,"kind":"symbol","title":"SwitchStore","role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore"},"doc://ComposableArchitecture/7SwiftUI4ViewP":{"title":"SwiftUICore.View","identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/data":{"title":"data","deprecated":true,"type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data"}],"role":"symbol","kind":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/data","url":"\/documentation\/composablearchitecture\/foreachstore\/data"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:element:fileID:filePath:line:column:)-6zye8":{"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:element:fileid:filepath:line:column:)-6zye8","role":"symbol","type":"topic","title":"forEach(_:action:element:fileID:filePath:line:column:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ElementState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElementAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ID","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"IdentifiedArray","kind":"typeIdentifier","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElementState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"text":"IdentifiedAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElementAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">\n","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-6zye8","abstract":[{"text":"Embeds a child reducer in a parent domain that works on elements of a collection in parent","type":"text"},{"text":" ","type":"text"},{"text":"state.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore","kind":"symbol","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/View-Implementations":{"title":"View Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/foreachstore\/view-implementations","role":"collectionGroup","abstract":[],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/caselet","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","title":"CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"type":"topic","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true,"type":"reference"},{"text":".","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/7SwiftUI18DynamicViewContentP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI18DynamicViewContentP","title":"SwiftUICore.DynamicViewContent"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"title":"Store","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","url":"\/documentation\/composablearchitecture\/store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationLinkStore":{"kind":"symbol","abstract":[{"type":"text","text":"A view that controls a navigation presentation."}],"title":"NavigationLinkStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationLinkStore","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","navigatorTitle":[{"text":"NavigationLinkStore","kind":"identifier"}],"deprecated":true,"role":"symbol","url":"\/documentation\/composablearchitecture\/navigationlinkstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore":{"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/navigationstackstore","navigatorTitle":[{"text":"NavigationStackStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore","abstract":[{"text":"A navigation stack that is driven by a store.","type":"text"}],"title":"NavigationStackStore","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationStackStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic","title":"SwiftUI Integration","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/viewstore","kind":"symbol","deprecated":true,"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewStore","kind":"identifier"}],"navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","title":"ViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/init(_:content:)-4l45p":{"title":"init(_:content:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-4l45p","deprecated":true,"kind":"symbol","url":"\/documentation\/composablearchitecture\/foreachstore\/init(_:content:)-4l45p","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Initializes a structure that computes views on demand from a store on a collection of data and"},{"type":"text","text":" "},{"type":"text","text":"an identified action."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"EachContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","text":"IdentifiedArray","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EachState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO","text":"IdentifiedAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EachAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"content","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"EachState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EachAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EachContent","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}