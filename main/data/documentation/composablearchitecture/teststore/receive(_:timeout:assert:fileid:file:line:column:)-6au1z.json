{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"isMatching","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"nanoseconds","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":"? = nil, ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"updateStateToExpectedResult","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")? = nil, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#fileID","kind":"keyword"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"filePath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#filePath","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":" = ","kind":"text"},{"text":"#column","kind":"keyword"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"isMatching","content":[{"inlineContent":[{"text":"A closure that attempts to match an action. If it returns ","type":"text"},{"type":"codeVoice","code":"false"},{"text":", a test","type":"text"},{"text":" ","type":"text"},{"text":"failure is reported.","type":"text"}],"type":"paragraph"}]},{"name":"nanoseconds","content":[{"inlineContent":[{"text":"The amount of time to wait for the expected action.","type":"text"}],"type":"paragraph"}]},{"name":"updateStateToExpectedResult","content":[{"inlineContent":[{"text":"A closure that asserts state changed by sending the action to","type":"text"},{"text":" ","type":"text"},{"text":"the store. The mutable state sent to this closure must be modified to match the state of","type":"text"},{"text":" ","type":"text"},{"text":"the store after processing the given action. Do not provide a closure if no change is","type":"text"},{"text":" ","type":"text"},{"text":"expected.","type":"text"}],"type":"paragraph"}]},{"name":"fileID","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The fileID."}]}]},{"name":"filePath","content":[{"inlineContent":[{"type":"text","text":"The filePath."}],"type":"paragraph"}]},{"name":"line","content":[{"type":"paragraph","inlineContent":[{"text":"The line.","type":"text"}]}]},{"name":"column","content":[{"inlineContent":[{"text":"The column.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is similar to "},{"type":"codeVoice","code":"receive(_:timeout:assert:fileID:file:line:column:)-8zqxk"},{"type":"text","text":", except"},{"type":"text","text":" "},{"type":"text","text":"it allows you to assert that an action was received that matches a predicate instead of a case"},{"text":" ","type":"text"},{"text":"key path:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["await store.send(.buttonTapped)","await store.receive {","  guard case .response(.success) = $0 else { return false }","  return true","} assert: {","  store.count = 42","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the storeâ€™s "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","isActive":true},{"type":"text","text":" is set to anything other than "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off","isActive":true},{"type":"text","text":", a grey"},{"type":"text","text":" "},{"type":"text","text":"information box will show next to the "},{"type":"codeVoice","code":"store.receive"},{"type":"text","text":" line in Xcode letting you know what data"},{"type":"text","text":" "},{"type":"text","text":"was in the effect that you chose not to assert on."}]},{"type":"paragraph","inlineContent":[{"text":"If you only want to check that a particular action case was received, then you might find the","type":"text"},{"text":" ","type":"text"},{"code":"receive(_:timeout:assert:fileID:file:line:column:)-53wic","type":"codeVoice"},{"text":" overload of this method more","type":"text"},{"text":" ","type":"text"},{"text":"useful.","type":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:fileID:file:line:column:)-6au1z"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"abstract":[{"text":"Asserts an action was received from an effect that matches a predicate, and asserts how the","type":"text"},{"text":" ","type":"text"},{"text":"state changes.","type":"text"}],"metadata":{"role":"symbol","extendedModule":"ComposableArchitecture","externalID":"s:22ComposableArchitecture9TestStoreC7receive_7timeout6assert6fileID0H04line6columnySbq_XE_s6UInt64VSgyxzKcSgs12StaticStringVAPS2utYaF","roleHeading":"Instance Method","title":"receive(_:timeout:assert:fileID:file:line:column:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"assert"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:fileid:file:line:column:)-6au1z"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"The current exhaustivity level of the test store."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","title":"exhaustivity","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exhaustivity","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:timeout:assert:fileID:file:line:column:)-6au1z":{"url":"\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:fileid:file:line:column:)-6au1z","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"receive(_:timeout:assert:fileID:file:line:column:)","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:fileID:file:line:column:)-6au1z","role":"symbol","abstract":[{"text":"Asserts an action was received from an effect that matches a predicate, and asserts how the","type":"text"},{"text":" ","type":"text"},{"text":"state changes.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":"?, ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"title":"TestStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity/off":{"url":"\/documentation\/composablearchitecture\/exhaustivity\/off","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"off"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Exhaustivity","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO"}],"type":"topic","title":"off","abstract":[{"text":"Non-exhaustive assertions.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}