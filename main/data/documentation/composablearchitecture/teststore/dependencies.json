{"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies"},"topicSections":[{"title":"Configuring exhaustivity","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-988rh","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-61in2"],"anchor":"Configuring-exhaustivity"}],"seeAlsoSections":[{"title":"Configuring a test store","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/useMainSerialExecutor"],"anchor":"Configuring-a-test-store","generated":true}],"variants":[{"paths":["\/documentation\/composablearchitecture\/teststore\/dependencies"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"ComposableArchitecture"}],"title":"dependencies","externalID":"s:22ComposableArchitecture9TestStoreC12dependencies12Dependencies16DependencyValuesVvp","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependencies"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"}]},"abstract":[{"type":"text","text":"The current dependencies of the test store."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependencies","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The dependencies define the execution context that your feature runs in. They can be modified","type":"text"},{"text":" ","type":"text"},{"text":"throughout the test store’s lifecycle in order to influence how your feature produces effects.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Typically you will override certain dependencies immediately after constructing the test","type":"text"},{"text":" ","type":"text"},{"text":"store. For example, if your feature need access to the current date and an API client to do","type":"text"},{"text":" ","type":"text"},{"text":"its job, you can override those dependencies like so:","type":"text"}]},{"type":"codeListing","code":["let store = TestStore(\/* ... *\/) {","  $0.apiClient = .mock","  $0.date = .constant(Date(timeIntervalSinceReferenceDate: 1234567890))","}","","\/\/ Store assertions here"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also override dependencies in the middle of the test in order to simulate how the"},{"type":"text","text":" "},{"type":"text","text":"dependency changes as the user performs action. For example, to test the flow of an API"},{"type":"text","text":" "},{"type":"text","text":"request failing at first but then later succeeding, you can do the following:"}]},{"type":"codeListing","code":["store.dependencies.apiClient = .failing","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(\\.searchResponse.failure) { \/* ... *\/ }","","store.dependencies.apiClient = .mock","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(\\.searchResponse.success) { \/* ... *\/ }"],"syntax":"swift"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/useMainSerialExecutor":{"type":"topic","role":"symbol","abstract":[{"text":"Serializes all async work to the main thread for the lifetime of the test store.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/useMainSerialExecutor","kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/usemainserialexecutor","title":"useMainSerialExecutor","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"useMainSerialExecutor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/withDependencies(_:operation:)-61in2":{"url":"\/documentation\/composablearchitecture\/teststore\/withdependencies(_:operation:)-61in2","abstract":[{"type":"text","text":"Overrides the store’s dependencies for a given operation."}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withDependencies","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"operation","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"kind":"symbol","title":"withDependencies(_:operation:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-61in2"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/withDependencies(_:operation:)-988rh":{"url":"\/documentation\/composablearchitecture\/teststore\/withdependencies(_:operation:)-988rh","type":"topic","abstract":[{"type":"text","text":"Overrides the store’s dependencies for a given operation."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withDependencies","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"operation","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"sending ","kind":"keyword"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"kind":"symbol","title":"withDependencies(_:operation:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/withDependencies(_:operation:)-988rh"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/dependencies":{"url":"\/documentation\/composablearchitecture\/teststore\/dependencies","type":"topic","abstract":[{"type":"text","text":"The current dependencies of the test store."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependencies","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"}],"kind":"symbol","title":"dependencies","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"The current exhaustivity level of the test store."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","title":"exhaustivity","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exhaustivity","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"title":"TestStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/timeout":{"url":"\/documentation\/composablearchitecture\/teststore\/timeout","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","abstract":[{"text":"The default timeout used in all methods that take an optional timeout.","type":"text"}],"kind":"symbol","title":"timeout","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"timeout","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"}],"type":"topic"}}}