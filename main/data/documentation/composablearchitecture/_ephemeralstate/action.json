{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/_ephemeralstate\/action"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"platforms":["macOS"]}],"kind":"declarations"}],"metadata":{"externalID":"s:22ComposableArchitecture15_EphemeralStateP6ActionQa","roleHeading":"Associated Type","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}],"symbolKind":"associatedtype","role":"symbol","title":"Action","modules":[{"name":"ComposableArchitecture"}],"required":true},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState\/Action"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/_EphemeralState/Action":{"title":"Action","url":"\/documentation\/composablearchitecture\/_ephemeralstate\/action","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState\/Action","kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic","title":"SwiftUI Integration","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_EphemeralState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_EphemeralState","type":"topic","url":"\/documentation\/composablearchitecture\/_ephemeralstate","abstract":[{"text":"Loosely represents features that are only briefly shown and the first time they are interacted","type":"text"},{"text":" ","type":"text"},{"text":"with they are dismissed. Such features do not manage any behavior on the inside.","type":"text"}],"navigatorTitle":[{"text":"_EphemeralState","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"_EphemeralState","kind":"identifier"}],"kind":"symbol","title":"_EphemeralState","role":"symbol"}}}