{"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"generated":true,"title":"Creating a view store","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-4f9j5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-1m32f","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-3ak1y","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStoreOf"],"anchor":"Creating-a-view-store"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"store"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toViewState"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"kind":"text","text":" "},{"kind":"internalParam","text":"fromViewAction"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":" "},{"kind":"internalParam","text":"isDuplicate"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A store."}],"type":"paragraph"}],"name":"store"},{"content":[{"inlineContent":[{"type":"text","text":"A transformation of "},{"type":"codeVoice","code":"ViewState"},{"type":"text","text":" to the state that will be observed for"},{"type":"text","text":" "},{"type":"text","text":"changes."}],"type":"paragraph"}],"name":"toViewState"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A transformation of "},{"type":"codeVoice","code":"ViewAction"},{"type":"text","text":" that describes what actions can be sent."}]}],"name":"fromViewAction"},{"content":[{"inlineContent":[{"type":"text","text":"A function to determine when two "},{"type":"codeVoice","code":"State"},{"type":"text","text":" values are equal. When values are"},{"type":"text","text":" "},{"type":"text","text":"equal, repeat view computations are removed."}],"type":"paragraph"}],"name":"isDuplicate"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is recommended that the "},{"type":"codeVoice","code":"observe"},{"type":"text","text":" argument transform the storeâ€™s state into the bare"},{"type":"text","text":" "},{"type":"text","text":"minimum of data needed for the feature to do its job in order to not hinder performance."},{"type":"text","text":" "},{"type":"text","text":"This is especially true for root level features, and less important for leaf features."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To read more about this performance technique, read the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","isActive":true},{"type":"text","text":" article."}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:removeduplicates:)-9mg12"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:22ComposableArchitecture9ViewStoreC_7observe4send16removeDuplicatesACyxq_GAA0D0Cyqd__qd_0_G_xqd__cqd_0_q_cSbx_xtctcr0_lufc","title":"init(_:observe:send:removeDuplicates:)","symbolKind":"init","roleHeading":"Initializer","platforms":[],"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use '@ObservableState', instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Using-ObservableState","type":"text"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9mg12"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]]},"abstract":[{"text":"Initializes a view store from a store which observes changes to state.","type":"text"}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"url":"\/documentation\/composablearchitecture","kind":"symbol","role":"collection","title":"ComposableArchitecture","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","url":"\/documentation\/composablearchitecture\/performance","role":"article","type":"topic","abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}],"title":"Performance","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:removeDuplicates:)-4f9j5":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)-4f9j5","abstract":[{"text":"Initializes a view store from a store which observes changes to state.","type":"text"}],"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:removeduplicates:)-4f9j5","role":"symbol","type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":">("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"title":"init(_:observe:removeDuplicates:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/viewstore","kind":"symbol","deprecated":true,"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewStore","kind":"identifier"}],"navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","title":"ViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"title":"Store","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","url":"\/documentation\/composablearchitecture\/store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic","title":"SwiftUI Integration","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:)-3ak1y":{"title":"init(_:observe:)","kind":"symbol","conformance":{"constraints":[{"code":"ViewState","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"Initializes a view store from a store which observes changes to state.","type":"text"}],"url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:)-3ak1y","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)-3ak1y"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStoreOf":{"navigatorTitle":[{"text":"ViewStoreOf","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewStoreOf","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStoreOf","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstoreof","title":"ViewStoreOf","abstract":[{"text":"A convenience type alias for referring to a view store of a given reducerâ€™s domain.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:removeDuplicates:)-9mg12":{"title":"init(_:observe:send:removeDuplicates:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:removeDuplicates:)-9mg12","abstract":[{"type":"text","text":"Initializes a view store from a store which observes changes to state."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"deprecated":true,"type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:removeduplicates:)-9mg12"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:send:)-1m32f":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:send:)-1m32f","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:send:)-1m32f","fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"code":"ViewState","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Initializes a view store from a store which observes changes to state."}],"title":"init(_:observe:send:)","kind":"symbol"}}}